KMIT hosting a Keshav Memorial Badminton League. They planned to conduct
N number of games. Each game begin and ends in perticular time slot.

You are given an array of time slots of the N games, consisting of
begin and end times (b1,e1),(b2,e2),... (b < e ).
Your task is to determine minimum number of badminton courts required 
to conduct all the games smoothly.

NOTE: If a game begins at time 'a' ends at time 'b', 
another game can start at 'b'.

Input Format:
-------------
Line-1: An integer N, number of games.
Next N lines: Two space separated integers, begin and end time of each game.

Output Format:
--------------
Print an integer, minimum number of badminton courts required.


Sample Input-1:
---------------
3
0 30
5 10
15 20

Sample Output-1:
----------------
2

Sample Input-2:
---------------
3
0 10
15 25
25 35

Sample Output-2:
----------------
1



def canArrange(n,slots):
    start=[]
    end=[]
    for i in slots:
        start.append(i[0])
        end.append(i[1])
    start.sort()
    end.sort()
    total,numb=0,0
    b,e=0,0
    while b<n:
        if start[b]<end[e]:
           b+=1
           numb+=1
        else:
           e+=1
           numb-=1
        total=max(total,numb)
    return total
    
if __name__=="__main__":
    n=int(input())
    slots=[]
    for i in range(n):
        slots.append(list(map(int,input().split())))
    print(canArrange(n,slots))